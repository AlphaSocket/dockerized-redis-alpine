sudo: required

services:
  - docker

before_install:
  - sudo apt update && sudo apt install curl libfcgi0ldbl -y
  - docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" $DOCKER_REGISTER;
  - docker build 
        --no-cache 
        -t 03192859189254/redis-alpine:latest
        --build-arg BUILD_COMMIT=`git rev-parse --short HEAD` 
        --build-arg BUILD_DATE=`date -u +"%Y-%m-%dT%H:%M:%SZ"` .

script:
# Starting container
 - TEST_CONTAINER_REDIS_ID=$( docker run -d --name=redis-alpine -p 127.0.0.1:30080:6379 -e CONFIG_REDIS_PASS=${TEST_PASS} 03192859189254/redis-alpine:latest )
 - TEST_CONTAINER_REDIS_STATUS=$(sleep 1 && docker inspect -f '{{.State.Running}}' $TEST_CONTAINER_REDIS_ID)

# Testing container
 - if [ ! "$TEST_CONTAINER_REDIS_STATUS" = "true" ]; then
        echo "Container failed, print logs and exiting\n";
        docker logs $TEST_CONTAINER_REDIS_ID;
        exit 1;
    fi
# Testing service
 - apt install redis-cli -y
 - PING_RESULT=$( sleep 1 && redis-cli ping -p ${TEST_PASS})

# Checking
 - if [ ! "$PING_RESULT" = "pong" ]; then
        echo "### Test failed, received ${PING_RESULT} printing log\n";
        docker logs $TEST_CONTAINER_REDIS_ID;
        exit 1;
    fi
# Success
 - if [ "$PING_RESULT" = "pong" ]; then
        echo "### Test Succeeded, received ${PING_RESULT}\n";
    fi


after_success:
  - if [ "$DOCKER_USERNAME" ]; then
        docker tag 03192859189254/redis-alpine:latest ${DOCKER_REGISTER}/${DOCKER_USERNAME}/redis-alpine:latest;
        docker push ${DOCKER_REGISTER}/${DOCKER_USERNAME}/redis-alpine:latest;
    fi